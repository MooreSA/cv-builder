{"version":3,"sources":["components/Header.jsx","components/forms/GeneralForm.jsx","components/forms/EducationForm.jsx","components/forms/ExperienceForm.jsx","components/CVBuilder.jsx","components/display/GeneralDisplay.jsx","components/display/EduItem.jsx","components/display/EduWrapper.jsx","components/display/JobItem.jsx","components/display/JobWrapper.jsx","components/CvDisplay.jsx","components/Footer.jsx","App.jsx","index.jsx"],"names":["Header","className","href","GeneralForm","props","generalInfo","handleUpdate","displayNextForm","useState","name","setName","email","setEmail","phone","setPhone","handleSubmit","myGeneralInfo","from","opacity","to","config","slow","springProps","style","htmlFor","type","id","value","onChange","event","target","onClick","EducationForm","eduInfo","displayPrevForm","myEduInfo","setMyEduInfo","currentEduIndex","setCurrentEduIndex","schoolName","setSchoolName","studyTitle","setStudyTitle","eduStartDay","setEduStartDay","eduEndDay","setEduEndDay","handleBack","makeEduItem","handleSave","newEduItem","map","eduItem","eduIndex","editInfo","concat","saveNewInfo","handleNext","useEffect","undefined","ExperienceForm","jobInfo","myJobInfo","setMyJobInfo","jobIndex","setJobIndex","companyName","setCompanyName","posTitle","setPosTitle","tasks","setTasks","jobStartDay","setJobStartDay","jobEndDay","setJobEndDay","constructJobItem","newJobItem","jobItem","i","editJobInfo","appendJobInfo","CVBuilder","resumeInfo","updateResume","toggleBuild","activeForm","setActiveForm","updatedInfo","GeneralDisplay","EduItem","EduWrapper","JobItem","JobWrapper","job","CvDisplay","Footer","App","buildMode","setBuildMode","setResumeInfo","newResume","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04e16927.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n  <header className=\"header\">\n    <div className=\"header__title\">Resume Builder</div>\n    <a href=\"http://mooresa.github.io\" className=\"header__link\">Home</a>\n  </header>\n);\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Spring, config } from 'react-spring/renderprops';\n\nconst GeneralForm = (props) => {\n  const {\n    generalInfo,\n    handleUpdate,\n    displayNextForm,\n  } = props;\n  const [name, setName] = useState(generalInfo.name);\n  const [email, setEmail] = useState(generalInfo.email);\n  const [phone, setPhone] = useState(generalInfo.phone);\n\n  const handleSubmit = () => {\n    // Todo - validation\n    handleUpdate({ myGeneralInfo: { name, email, phone } });\n    displayNextForm();\n  };\n\n  return (\n    <Spring\n      from={{ opacity: 0 }}\n      to={{ opacity: 1 }}\n      config={config.slow}\n    >\n      {(springProps) => (\n        <form className=\"form\" style={springProps}>\n          <div className=\"form__header\">Personal Infomation</div>\n          <div className=\"form__inputs\">\n            <div className=\"form__field\">\n              <label className=\"form__label\" htmlFor=\"name-input\">Name:</label>\n              <input\n                type=\"text\"\n                id=\"name-input\"\n                name=\"name\"\n                value={name}\n                onChange={(event) => setName(event.target.value)}\n                className=\"form__input\"\n              />\n            </div>\n            <div className=\"form__field\">\n              <label className=\"form__label\" htmlFor=\"email-input\">Email:</label>\n              <input\n                type=\"email\"\n                id=\"email-input\"\n                name=\"email\"\n                value={email}\n                onChange={(event) => setEmail(event.target.value)}\n                className=\"form__input\"\n              />\n            </div>\n            <div className=\"form__field\">\n              <label className=\"form__label\" htmlFor=\"tel-input\">Phone:</label>\n              <input\n                type=\"tel\"\n                id=\"phone-input\"\n                name=\"phone\"\n                value={phone}\n                onChange={(event) => setPhone(event.target.value)}\n                className=\"form__input\"\n              />\n            </div>\n            <div className=\"form__btns\">\n              <button onClick={handleSubmit} className=\"form__continue\" type=\"button\">Continue</button>\n            </div>\n          </div>\n        </form>\n      )}\n    </Spring>\n  );\n};\n\nexport default GeneralForm;\n","import React, { useState, useEffect } from 'react';\nimport { Spring, config } from 'react-spring/renderprops';\n\nconst EducationForm = (props) => {\n  const {\n    eduInfo,\n    handleUpdate,\n    displayPrevForm,\n    displayNextForm,\n  } = props;\n  const [myEduInfo, setMyEduInfo] = useState(eduInfo);\n  const [currentEduIndex, setCurrentEduIndex] = useState(0);\n  const [schoolName, setSchoolName] = useState('');\n  const [studyTitle, setStudyTitle] = useState('');\n  const [eduStartDay, setEduStartDay] = useState('');\n  const [eduEndDay, setEduEndDay] = useState('');\n\n  const handleBack = () => {\n    if (currentEduIndex === 0) {\n      displayPrevForm();\n    }\n    if (currentEduIndex !== 0) {\n      setCurrentEduIndex(currentEduIndex - 1);\n    }\n  };\n\n  const makeEduItem = () => ({\n    schoolName,\n    studyTitle,\n    eduStartDay,\n    eduEndDay,\n  });\n\n  const saveNewInfo = () => {\n    const eduItem = makeEduItem();\n    setMyEduInfo(myEduInfo.concat(eduItem));\n  };\n\n  const editInfo = () => {\n    const newEduItem = makeEduItem();\n    setMyEduInfo(myEduInfo.map((eduItem, eduIndex) => {\n      if (eduIndex === currentEduIndex) {\n        return newEduItem;\n      }\n      return eduItem;\n    }));\n  };\n\n  const handleSave = () => {\n    if (myEduInfo[currentEduIndex]) {\n      editInfo();\n    } else {\n      saveNewInfo();\n    }\n    setCurrentEduIndex(currentEduIndex + 1);\n  };\n\n  const handleNext = () => {\n    displayNextForm();\n  };\n\n  useEffect(() => {\n    if (myEduInfo[currentEduIndex] === undefined) {\n      setSchoolName('');\n      setStudyTitle('');\n      setEduStartDay('');\n      setEduEndDay('');\n    } else {\n      setSchoolName(myEduInfo[currentEduIndex].schoolName);\n      setStudyTitle(myEduInfo[currentEduIndex].studyTitle);\n      setEduStartDay(myEduInfo[currentEduIndex].eduStartDay);\n      setEduEndDay(myEduInfo[currentEduIndex].eduEndDay);\n    }\n  }, [currentEduIndex]);\n\n  useEffect(() => {\n    handleUpdate({ myEduInfo });\n  }, [myEduInfo]);\n\n  return (\n    <Spring\n      from={{ opacity: 0 }}\n      to={{ opacity: 1 }}\n      config={config.slow}\n    >\n      {(springProps) => (\n        <form className=\"form\" style={springProps}>\n          <div className=\"form__header\">Education</div>\n          <div className=\"form__inputs\">\n            <div className=\"form__field\">\n              <label className=\"form__label\" htmlFor=\"school-name-input\">School Name:</label>\n              <input\n                type=\"text\"\n                id=\"school-name-input\"\n                name=\"school-name\"\n                value={schoolName}\n                onChange={(event) => setSchoolName(event.target.value)}\n                className=\"form__input\"\n              />\n            </div>\n            <div className=\"form__field\">\n              <label className=\"form__label\" htmlFor=\"study-input\">Study Field:</label>\n              <input\n                className=\"form__input\"\n                type=\"text\"\n                id=\"study-input\"\n                name=\"studyTitle\"\n                value={studyTitle}\n                onChange={((event) => setStudyTitle(event.target.value))}\n              />\n            </div>\n            <div className=\"form__field\">\n              <label className=\"form__label\" htmlFor=\"start-input\">Start Day:</label>\n              <input\n                className=\"form__input\"\n                type=\"date\"\n                id=\"start-input\"\n                name=\"eduStartDay\"\n                value={eduStartDay}\n                onChange={((event) => setEduStartDay(event.target.value))}\n              />\n            </div>\n            <div className=\"form__field\">\n              <label className=\"form__label\" htmlFor=\"name-input\">End Day:</label>\n              <input\n                className=\"form__input\"\n                type=\"date\"\n                id=\"end-input\"\n                name=\"eduEndDay\"\n                value={eduEndDay}\n                onChange={((event) => setEduEndDay(event.target.value))}\n              />\n            </div>\n            <div className=\"form__btns\">\n              <button type=\"button\" onClick={handleBack} className=\"form__back\">Previous</button>\n              <button type=\"button\" onClick={handleSave} className=\"form__more\">Save</button>\n              <button type=\"button\" onClick={handleNext} className=\"form__continue\">Continue</button>\n            </div>\n          </div>\n        </form>\n      )}\n    </Spring>\n  );\n};\n\nexport default EducationForm;\n","import React, { useState, useEffect } from 'react';\nimport { Spring, config } from 'react-spring/renderprops';\n\nconst ExperienceForm = (props) => {\n  const {\n    jobInfo,\n    handleUpdate,\n    displayNextForm,\n    displayPrevForm,\n  } = props;\n  // You need all these states to control the input fields\n  // and to pass up the chain\n  const [myJobInfo, setMyJobInfo] = useState(jobInfo);\n  const [jobIndex, setJobIndex] = useState(0);\n  const [companyName, setCompanyName] = useState('');\n  const [posTitle, setPosTitle] = useState('');\n  const [tasks, setTasks] = useState('');\n  const [jobStartDay, setJobStartDay] = useState('');\n  const [jobEndDay, setJobEndDay] = useState('');\n\n  const handleBack = () => {\n    if (jobIndex === 0) {\n      displayPrevForm();\n      return;\n    }\n    setJobIndex(jobIndex - 1);\n  };\n\n  // So that we don't need to do this when editing or adding them\n  const constructJobItem = () => ({\n    companyName,\n    posTitle,\n    tasks,\n    jobStartDay,\n    jobEndDay,\n  });\n\n  // add new job to myJobInfo state\n  const appendJobInfo = () => {\n    const newJobItem = constructJobItem();\n    setMyJobInfo(myJobInfo.concat(newJobItem));\n  };\n\n  // edit a job that exists in myJobInfo\n  const editJobInfo = () => {\n    const newJobItem = constructJobItem();\n    setMyJobInfo(myJobInfo.map((jobItem, i) => {\n      // this is terrible code\n      // forgive me\n      if (jobIndex === i) return newJobItem;\n      return jobItem;\n    }));\n  };\n\n  const handleSave = () => {\n    // If there is a job at the current index\n    if (myJobInfo[jobIndex]) {\n      // edit the current existing job\n      editJobInfo();\n    } else {\n      appendJobInfo();\n    }\n    setJobIndex(jobIndex + 1);\n  };\n\n  const handleNext = () => {\n    displayNextForm();\n  };\n\n  useEffect(() => {\n    if (myJobInfo[jobIndex] === undefined) {\n      setCompanyName('');\n      setPosTitle('');\n      setTasks('');\n      setJobStartDay('');\n      setJobEndDay('');\n    } else {\n      setCompanyName(myJobInfo[jobIndex].companyName);\n      setPosTitle(myJobInfo[jobIndex].posTitle);\n      setTasks(myJobInfo[jobIndex].tasks);\n      setJobStartDay(myJobInfo[jobIndex].jobStartDay);\n      setJobEndDay(myJobInfo[jobIndex].jobEndDay);\n    }\n  }, [jobIndex]);\n\n  useEffect(() => {\n    handleUpdate({ myJobInfo });\n  }, [myJobInfo]);\n\n  return (\n    <Spring\n      from={{ opacity: 0 }}\n      to={{ opacity: 1 }}\n      config={config.slow}\n    >\n      {(springProps) => (\n        <form className=\"form\" style={springProps}>\n          <div className=\"form__header\">Experience</div>\n          <div className=\"form__inputs\">\n            <div className=\"form__field\">\n              <label className=\"form__label\" htmlFor=\"job-company-input\">Company:</label>\n              <input\n                type=\"text\"\n                id=\"input\"\n                name=\"companyName\"\n                value={companyName}\n                onChange={(event) => setCompanyName(event.target.value)}\n                className=\"form__input\"\n              />\n            </div>\n            <div className=\"form__field\">\n              <label className=\"form__label\" htmlFor=\"job-title-input\">Position:</label>\n              <input\n                type=\"text\"\n                id=\"input\"\n                name=\"posTitle\"\n                value={posTitle}\n                onChange={(event) => setPosTitle(event.target.value)}\n                className=\"form__input\"\n              />\n            </div>\n            <div className=\"form__field\">\n              <label className=\"form__label\" htmlFor=\"job-tasks-input\">Responsibilities: </label>\n              <input\n                type=\"text\"\n                id=\"input\"\n                name=\"tasks\"\n                value={tasks}\n                onChange={(event) => setTasks(event.target.value)}\n                className=\"form__input\"\n              />\n            </div>\n            <div className=\"form__field\">\n              <label className=\"form__label\" htmlFor=\"job-start-input\">Start Day:</label>\n              <input\n                className=\"form__input\"\n                type=\"date\"\n                id=\"job-start-input\"\n                name=\"jobStartDay\"\n                value={jobStartDay}\n                onChange={((event) => setJobStartDay(event.target.value))}\n              />\n            </div>\n            <div className=\"form__field\">\n              <label className=\"form__label\" htmlFor=\"job-end-input\">End Day:</label>\n              <input\n                className=\"form__input\"\n                type=\"date\"\n                id=\"job-end-input\"\n                name=\"jobEndDay\"\n                value={jobEndDay}\n                onChange={((event) => setJobEndDay(event.target.value))}\n              />\n            </div>\n            <div className=\"form__btns\">\n              <button type=\"button\" onClick={handleBack} className=\"form__back\">Previous</button>\n              <button type=\"button\" onClick={handleSave} className=\"form__more\">Save</button>\n              <button type=\"button\" onClick={handleNext} className=\"form__continue\">Complete Resume</button>\n            </div>\n          </div>\n        </form>\n      )}\n    </Spring>\n  );\n};\n\nexport default ExperienceForm;\n","import React, { useEffect, useState } from 'react';\nimport GeneralForm from './forms/GeneralForm';\nimport EducationForm from './forms/EducationForm';\nimport ExperienceForm from './forms/ExperienceForm';\n\nconst CVBuilder = (props) => {\n  const { resumeInfo, updateResume, toggleBuild } = props;\n  const { generalInfo, eduInfo, jobInfo } = resumeInfo;\n  const [activeForm, setActiveForm] = useState(0);\n\n  const displayNextForm = () => setActiveForm(activeForm + 1);\n  const displayPrevForm = () => setActiveForm(activeForm - 1);\n\n  useEffect(() => {\n    if (activeForm === 3) toggleBuild();\n  }, [activeForm]);\n\n  const handleUpdate = (updatedInfo) => {\n    const {\n      myGeneralInfo = generalInfo,\n      myEduInfo = eduInfo,\n      myJobInfo = jobInfo,\n    } = updatedInfo;\n    const newResume = {\n      generalInfo: myGeneralInfo,\n      eduInfo: myEduInfo,\n      jobInfo: myJobInfo,\n    };\n    updateResume(newResume);\n  };\n\n  const displayForm = () => {\n    if (activeForm === 0) {\n      return (\n        <GeneralForm\n          generalInfo={generalInfo}\n          handleUpdate={handleUpdate}\n          displayPrevForm={displayPrevForm}\n          displayNextForm={displayNextForm}\n        />\n      );\n    }\n    if (activeForm === 1) {\n      return (\n        <EducationForm\n          eduInfo={eduInfo}\n          handleUpdate={handleUpdate}\n          displayPrevForm={displayPrevForm}\n          displayNextForm={displayNextForm}\n        />\n      );\n    }\n    return (\n      <ExperienceForm\n        jobInfo={jobInfo}\n        handleUpdate={handleUpdate}\n        displayPrevForm={displayPrevForm}\n        displayNextForm={displayNextForm}\n      />\n    );\n  };\n\n  return (\n    <div className=\"cv__builder\">\n      {displayForm()}\n\n      {/* <GeneralForm\n        generalInfo={generalInfo}\n        handleUpdate={handleUpdate}\n        activeForm={activeForm}\n        displayPrevForm={displayPrevForm}\n        displayNextForm={displayNextForm}\n      />\n      <EducationForm\n        eduInfo={eduInfo}\n        handleUpdate={handleUpdate}\n        activeForm={activeForm}\n        displayPrevForm={displayPrevForm}\n        displayNextForm={displayNextForm}\n      />\n      <ExperienceForm\n        jobInfo={jobInfo}\n        handleUpdate={handleUpdate}\n        activeForm={activeForm}\n        displayPrevForm={displayPrevForm}\n        displayNextForm={displayNextForm}\n      /> */}\n    </div>\n  );\n};\n\nexport default CVBuilder;\n","import React from 'react';\n\nconst GeneralDisplay = (props) => {\n  const { generalInfo } = props;\n  const { name, email, phone } = generalInfo;\n\n  return (\n    <div className=\"display-section\">\n      <h2 className=\"display-section__header\">Personal Information</h2>\n      <div className=\"display-section__info\">\n        <div className=\"display-section__detail display-section__detail--emphasis\">{name}</div>\n        <div className=\"display-section__detail display-section__detail--small\">{email}</div>\n        <div className=\"display-section__detail display-section__detail--small\">{phone}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default GeneralDisplay;\n","import React from 'react';\n\nconst EduItem = (props) => {\n  const { eduItem } = props;\n  const {\n    schoolName, studyTitle, eduStartDay, eduEndDay, eduIndex,\n  } = eduItem;\n  return (\n    <div className=\"display-section__info\" id={`edu-${eduIndex}`}>\n      <div className=\"display-section__detail\">{schoolName}</div>\n      <div className=\"display-section__detail\">{studyTitle}</div>\n      <div className=\"display-section__detail display-section__detail--small\">{`${eduStartDay} - ${eduEndDay}`}</div>\n    </div>\n  );\n};\n\nexport default EduItem;\n","import React from 'react';\nimport EduItem from './EduItem';\n\nconst EduWrapper = (props) => {\n  const { eduInfo } = props;\n\n  return (\n    <div className=\"display-section\">\n      <h3 className=\"display-section__header\">Education</h3>\n      {eduInfo.map((eduItem) => {\n        const { eduIndex } = eduItem;\n        return <EduItem eduItem={eduItem} key={eduIndex} />;\n      })}\n    </div>\n  );\n};\n\nexport default EduWrapper;\n","import React from 'react';\n\nconst JobItem = (props) => {\n  const { jobInfo } = props;\n  const {\n    companyName, posTitle, tasks, jobStartDay, jobEndDay, jobIndex,\n  } = jobInfo;\n\n  return (\n    <div className=\"display-section__info\" id={`job-${jobIndex}`}>\n      <div className=\"display-section__detail display-section__detail-emphasis\">{companyName}</div>\n      <div className=\"display-section__detail\">{posTitle}</div>\n      <div className=\"display-section__detail display-section__detail--small\">{`${jobStartDay} ${jobEndDay}`}</div>\n      <div className=\"display-section__detail\">{tasks}</div>\n    </div>\n  );\n};\n\nexport default JobItem;\n","import React from 'react';\nimport JobItem from './JobItem';\n\nconst JobWrapper = (props) => {\n  const { jobInfo } = props;\n\n  return (\n    <div className=\"display-section\">\n      <h3 className=\"display-section__header\">Practical Experience</h3>\n      {jobInfo.map((job) => {\n        const { jobIndex } = job;\n        return <JobItem jobInfo={job} key={jobIndex} />;\n      })}\n    </div>\n  );\n};\n\nexport default JobWrapper;\n","import React from 'react';\nimport { Spring, config } from 'react-spring/renderprops';\nimport GeneralDisplay from './display/GeneralDisplay';\nimport EduWrapper from './display/EduWrapper';\nimport JobWrapper from './display/JobWrapper';\n\nconst CvDisplay = (props) => {\n  const { resumeInfo } = props;\n\n  const { generalInfo, eduInfo, jobInfo } = resumeInfo;\n\n  return (\n    <Spring\n      from={{ opacity: 0 }}\n      to={{ opacity: 1 }}\n      config={config.slow}\n    >\n      {(springProps) => (\n        <div className=\"cv__display\" style={springProps}>\n          <GeneralDisplay generalInfo={generalInfo} />\n          <EduWrapper eduInfo={eduInfo} />\n          <JobWrapper jobInfo={jobInfo} />\n        </div>\n      )}\n    </Spring>\n  );\n};\n\nexport default CvDisplay;\n","import React from 'react';\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    Copyright © 2021 Seamus Moore\n  </footer>\n);\n\nexport default Footer;\n","/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport Header from './components/Header';\nimport CVBuilder from './components/CVBuilder';\nimport CvDisplay from './components/CvDisplay';\nimport Footer from './components/Footer';\n\nconst App = () => {\n  const [buildMode, setBuildMode] = useState(true);\n  const [resumeInfo, setResumeInfo] = useState({\n    generalInfo: {\n      name: '',\n      email: '',\n      phone: '',\n    },\n    eduInfo: [],\n    jobInfo: [],\n  });\n\n  const updateResume = (newResume) => {\n    setResumeInfo(newResume);\n  };\n\n  const toggleBuild = () => setBuildMode(!buildMode);\n\n  const displayContent = () => {\n    if (buildMode) {\n      return (\n        <CVBuilder\n          resumeInfo={resumeInfo}\n          updateResume={updateResume}\n          toggleBuild={toggleBuild}\n        />\n      );\n    }\n    return (<CvDisplay resumeInfo={resumeInfo} />);\n  };\n\n  return (\n    <div className=\"page\">\n      <Header />\n      {displayContent()}\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style/index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}